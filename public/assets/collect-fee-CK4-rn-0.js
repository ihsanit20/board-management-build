import{P as r,Q as s}from"./index-B7fQsvqV.js";const n=r("collectFee",{state:()=>({collectFees:[],collectFee:null,loading:!1,error:null,totalAmount:0,paymentMethod:"offline",transactionId:null}),actions:{async fetchCollectFees(o={}){var a,t;this.loading=!0;try{const e=await s.get("/collect-fees",{params:o});return this.collectFees=e.data.data,e.data}catch(e){throw this.error=((t=(a=e.response)==null?void 0:a.data)==null?void 0:t.message)||"Failed to fetch fee collections",e}finally{this.loading=!1}},async fetchCollectFee(o){var a,t;this.loading=!0;try{const e=await s.get(`/collect-fees/${o}`);return this.collectFee=e.data.data,e.data}catch(e){throw this.error=((t=(a=e.response)==null?void 0:a.data)==null?void 0:t.message)||"Failed to fetch fee collection details",e}finally{this.loading=!1}},async createCollectFee(o){var a,t;console.log(o),this.loading=!0;try{const e=await s.post("/collect-fees",o);return this.collectFee=e.data,e.data}catch(e){throw this.error=((t=(a=e.response)==null?void 0:a.data)==null?void 0:t.message)||"Failed to create fee collection",e}finally{this.loading=!1}},async bkashExecutePayment(o,a={}){var t,e;this.loading=!0;try{return await s.post(`/collect-fees/bkash/execute/${o}`,a)}catch(l){this.error=((e=(t=l.response)==null?void 0:t.data)==null?void 0:e.message)||"Failed to execute bKash payment",console.log(l);return}finally{this.loading=!1}}}});export{n as u};
