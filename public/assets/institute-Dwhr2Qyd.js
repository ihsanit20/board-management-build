import{D as l,E as a}from"./index-D8NEAiqQ.js";const d=l("institute",{state:()=>({institutes:[],institute:null,loading:!1,error:null}),actions:{async fetchInstitutes(i={}){var e,s;this.loading=!0;try{const t=await a.get("/institutes",{params:i});this.institutes=t.data}catch(t){this.error=((s=(e=t.response)==null?void 0:e.data)==null?void 0:s.message)||"Failed to fetch institutes"}finally{this.loading=!1}},async fetchInstitute(i){var e,s;this.loading=!0;try{const t=await a.get(`/institutes/${i}`);this.institute=t.data}catch(t){this.error=((s=(e=t.response)==null?void 0:e.data)==null?void 0:s.message)||"Failed to fetch institute"}finally{this.loading=!1}},async createInstitute(i){var e,s;this.loading=!0;try{const t=await a.post("/institutes",i);this.institutes.push(t.data)}catch(t){this.error=((s=(e=t.response)==null?void 0:e.data)==null?void 0:s.message)||"Failed to create institute"}finally{this.loading=!1}},async updateInstitute(i,e){var s,t;this.loading=!0;try{const n=await a.put(`/institutes/${i}`,e),r=this.institutes.findIndex(o=>o.id===i);r!==-1&&(this.institutes[r]=n.data)}catch(n){this.error=((t=(s=n.response)==null?void 0:s.data)==null?void 0:t.message)||"Failed to update institute"}finally{this.loading=!1}},async deleteInstitute(i){var e,s;this.loading=!0;try{await a.delete(`/institutes/${i}`),this.institutes=this.institutes.filter(t=>t.id!==i)}catch(t){this.error=((s=(e=t.response)==null?void 0:e.data)==null?void 0:s.message)||"Failed to delete institute"}finally{this.loading=!1}}}});export{d as u};
