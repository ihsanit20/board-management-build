import{P as g,r as c,Q as n}from"./index-4YhllknO.js";const q=g("quranQuestion",()=>{const e=c([]),s=c(null);async function u(o,r,a){try{const t=await n.get("/quran-questions",{params:{center_id:o,zamat_id:r,para_group_id:a}});e.value=t.data}catch(t){console.error("Error fetching Quran questions:",t)}}async function p(o){try{const r=await n.get(`/quran-questions/${o}`);if(!r.data)throw new Error("No data found for the given question ID.");return s.value=r.data,r.data}catch(r){throw console.error("Error fetching Quran question:",r),r}}async function l(o){try{const r=await n.post("/quran-questions",o);e.value.push(r.data)}catch(r){console.error("Error creating Quran question:",r)}}async function d(o,r){try{const a=await n.put(`/quran-questions/${o}`,r),t=e.value.findIndex(i=>i.id===o);t!==-1&&(e.value[t]=a.data)}catch(a){console.error("Error updating Quran question:",a)}}async function f(o){try{await n.delete(`/quran-questions/${o}`),e.value=e.value.filter(r=>r.id!==o)}catch(r){console.error("Error deleting Quran question:",r)}}return{questions:e,selectedQuestion:s,fetchQuestions:u,fetchQuestionById:p,createQuestion:l,updateQuestion:d,deleteQuestion:f}}),v=g("paraGroup",()=>{const e=c([]),s=c(null),u=c(!1);async function p(r){try{const a=await n.get("/para-groups",{params:r});e.value=a.data}catch(a){console.error("Error fetching para groups:",a)}}async function l(r){u.value=!0;try{const a=await n.get(`/para-groups/${r}`);s.value=a.data}catch(a){console.error(`Error fetching para group with id ${r}:`,a)}finally{u.value=!1}}async function d(r){try{const a=await n.post("/para-groups",r);e.value.push(a.data.para_group)}catch(a){console.error("Error creating para group:",a)}}async function f(r,a){try{const t=await n.put(`/para-groups/${r}`,a),i=e.value.findIndex(h=>h.id===r);i!==-1&&(e.value[i]=t.data.para_group)}catch(t){console.error(`Error updating para group with id ${r}:`,t)}}async function o(r){try{await n.delete(`/para-groups/${r}`),e.value=e.value.filter(a=>a.id!==r)}catch(a){console.error(`Error deleting para group with id ${r}:`,a)}}return{paraGroups:e,paraGroup:s,loading:u,fetchParaGroups:p,fetchParaGroup:l,createParaGroup:d,updateParaGroup:f,deleteParaGroup:o}});export{v as a,q as u};
