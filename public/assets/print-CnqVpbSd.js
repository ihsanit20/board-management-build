import{P as w,r as u,Q as c}from"./index-ALt6dNYn.js";const I=w("print",()=>{const o=u(null),v=u(null),i=u(null),p=u([]),h=u([]),d=u([]),y=u([]),f=u([]),m=u(null),l=u(!1),n=u(null);return{centerId:o,zamatId:v,markSheetData:i,printEnvelopFinal:p,centerEnvelopData:h,seatNumberData:d,centerAcknowledgmentData:y,areaStudentCountData:f,summaryData:m,loading:l,error:n,fetchMarkSheet:async()=>{var a,t;if(!o.value||!v.value){n.value="Center ID and Zamat ID are required.";return}i.value=null,l.value=!0,n.value=null;try{const e=await c.post("/generate-mark-sheet",{center_id:o.value,zamat_id:v.value});i.value=e.data}catch(e){n.value=((t=(a=e.response)==null?void 0:a.data)==null?void 0:t.message)||"An error occurred while fetching the mark sheet."}finally{l.value=!1}},fetchPrintEnvelopFinal:async(a=null,t=null)=>{var e,r;l.value=!0,n.value=null;try{const s={};a&&(s.area_name=a),t&&(s.institute_code=t);const g=await c.get("/print-envelop-final",{params:s});p.value=g.data}catch(s){n.value=((r=(e=s.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to fetch print envelop data"}finally{l.value=!1}},fetchCenterEnvelop:async()=>{var a,t;l.value=!0,n.value=null;try{const e=await c.get("/print-center-envelop");h.value=e.data}catch(e){n.value=((t=(a=e.response)==null?void 0:a.data)==null?void 0:t.message)||"Failed to fetch center envelop data"}finally{l.value=!1}},fetchSeatNumber:async()=>{var a,t;if(!o.value||!v.value){n.value="Center ID and Zamat ID are required.";return}l.value=!0,n.value=null,d.value=[];try{const e=await c.get("/print-seat-number",{params:{center_id:o.value,zamat_id:v.value}});d.value=e.data}catch(e){n.value=((t=(a=e.response)==null?void 0:a.data)==null?void 0:t.message)||"Failed to fetch seat number data"}finally{l.value=!1}},fetchCenterAcknowledgment:async(a=null)=>{var t,e;l.value=!0,n.value=null;try{const r={};a&&(r.department_id=a);const s=await c.get("/center-acknowledgment",{params:r});y.value=s.data}catch(r){n.value=((e=(t=r.response)==null?void 0:t.data)==null?void 0:e.message)||"Failed to fetch data"}finally{l.value=!1}},fetchAreaStudentCount:async(a,t)=>{var e,r;l.value=!0,n.value=null;try{const s=await c.get(`/area-student-count/${a}/${t}`);console.log("API Response:",s.data),s.data?f.value=s.data:f.value={}}catch(s){n.value=((r=(e=s.response)==null?void 0:e.data)==null?void 0:r.message)||s.message||"Failed to fetch area student count data"}finally{l.value=!1}},fetchExamSummary:async a=>{var t,e;if(!a){n.value="Exam ID is required.";return}l.value=!0,n.value=null,m.value=null;try{const r=await c.get(`/summary/${a}`);m.value=r.data}catch(r){n.value=((e=(t=r.response)==null?void 0:t.data)==null?void 0:e.message)||"Failed to fetch exam summary data"}finally{l.value=!1}}}});export{I as u};
