import{O as y,r as u,P as c}from"./index-DMEkCB5p.js";const _=y("print",()=>{const o=u(null),v=u(null),i=u(null),p=u([]),h=u([]),d=u([]),m=u([]),f=u([]),r=u(!1),n=u(null);return{centerId:o,zamatId:v,markSheetData:i,printEnvelopFinal:p,centerEnvelopData:h,seatNumberData:d,centerAcknowledgmentData:m,areaStudentCountData:f,loading:r,error:n,fetchMarkSheet:async()=>{var a,t;if(!o.value||!v.value){n.value="Center ID and Zamat ID are required.";return}i.value=null,r.value=!0,n.value=null;try{const e=await c.post("/generate-mark-sheet",{center_id:o.value,zamat_id:v.value});i.value=e.data}catch(e){n.value=((t=(a=e.response)==null?void 0:a.data)==null?void 0:t.message)||"An error occurred while fetching the mark sheet."}finally{r.value=!1}},fetchPrintEnvelopFinal:async(a=null,t=null)=>{var e,s;r.value=!0,n.value=null;try{const l={};a&&(l.area_name=a),t&&(l.institute_code=t);const g=await c.get("/print-envelop-final",{params:l});p.value=g.data}catch(l){n.value=((s=(e=l.response)==null?void 0:e.data)==null?void 0:s.message)||"Failed to fetch print envelop data"}finally{r.value=!1}},fetchCenterEnvelop:async()=>{var a,t;r.value=!0,n.value=null;try{const e=await c.get("/print-center-envelop");h.value=e.data}catch(e){n.value=((t=(a=e.response)==null?void 0:a.data)==null?void 0:t.message)||"Failed to fetch center envelop data"}finally{r.value=!1}},fetchSeatNumber:async()=>{var a,t;if(!o.value||!v.value){n.value="Center ID and Zamat ID are required.";return}r.value=!0,n.value=null,d.value=[];try{const e=await c.get("/print-seat-number",{params:{center_id:o.value,zamat_id:v.value}});d.value=e.data}catch(e){n.value=((t=(a=e.response)==null?void 0:a.data)==null?void 0:t.message)||"Failed to fetch seat number data"}finally{r.value=!1}},fetchCenterAcknowledgment:async(a=null)=>{var t,e;r.value=!0,n.value=null;try{const s={};a&&(s.department_id=a);const l=await c.get("/center-acknowledgment",{params:s});m.value=l.data}catch(s){n.value=((e=(t=s.response)==null?void 0:t.data)==null?void 0:e.message)||"Failed to fetch data"}finally{r.value=!1}},fetchAreaStudentCount:async(a,t)=>{var e,s;r.value=!0,n.value=null;try{const l=await c.get(`/area-student-count/${a}/${t}`);console.log("API Response:",l.data),l.data?f.value=l.data:f.value={}}catch(l){n.value=((s=(e=l.response)==null?void 0:e.data)==null?void 0:s.message)||l.message||"Failed to fetch area student count data"}finally{r.value=!1}}}});export{_ as u};
