import{O as l,P as r}from"./index-IrebYGEt.js";const n=l("sms",{state:()=>({loading:!1,error:null,success:null,smsLogs:[],smsLogCount:0,totalCost:0}),actions:{async sendSms(a={}){var e,s;this.loading=!0,this.error=null,this.success=null;try{const t=await r.post("/send-sms",a);return t.data.success?this.success="SMS sent successfully":this.error="SMS sending failed",t.data}catch(t){throw this.error=((s=(e=t.response)==null?void 0:e.data)==null?void 0:s.message)||"Failed to send SMS",t}finally{this.loading=!1}},async fetchSmsLogs(a=10,e=1){var s,t;this.loading=!0,this.error=null;try{const o=await r.get("/sms-logs",{params:{per_page:a,page:e}});o.data.success?this.smsLogs=o.data.data.data:this.error="Failed to fetch SMS logs"}catch(o){this.error=((t=(s=o.response)==null?void 0:s.data)==null?void 0:t.message)||"Failed to fetch SMS logs"}finally{this.loading=!1}},async fetchSmsLogCount(){var a,e;this.loading=!0,this.error=null;try{const s=await r.get("/sms-logs/count");s.data.success?(this.smsLogCount=s.data.total_sms_parts,this.totalCost=s.data.total_cost):this.error="Failed to fetch SMS log count"}catch(s){this.error=((e=(a=s.response)==null?void 0:a.data)==null?void 0:e.message)||"Failed to fetch SMS log count"}finally{this.loading=!1}}}});export{n as u};
