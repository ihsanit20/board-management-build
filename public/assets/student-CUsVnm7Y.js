import{O as l,P as r}from"./index-9E9STZuZ.js";const c=l("student",{state:()=>({students:[],student:null,loading:!1,error:null,centerWiseStudentCount:[],printEnvelopData:[]}),actions:{async fetchStudents({applicationId:a,instituteCode:e,zamatId:t,examId:s}={}){var i,o;this.loading=!0;const n={};a&&(n.application_id=a),e&&(n.institute_code=e),t&&(n.zamat_id=t),s&&(n.exam_id=s);try{const d=await r.get("/students",{params:n});this.students=d.data}catch(d){this.error=((o=(i=d.response)==null?void 0:i.data)==null?void 0:o.message)||"Failed to fetch students"}finally{this.loading=!1}},async fetchPrintStudents({applicationId:a,instituteCode:e,zamatId:t}={}){var n,i;this.loading=!0;const s={};a&&(s.application_id=a),e&&(s.institute_code=e),t&&(s.zamat_id=t);try{const o=await r.get("/students-print",{params:s});this.students=o.data}catch(o){this.error=((i=(n=o.response)==null?void 0:n.data)==null?void 0:i.message)||"Failed to fetch students"}finally{this.loading=!1}},async fetchStudent(a){var e,t;this.loading=!0;try{const s=await r.get(`/students/${a}`);this.student=s.data}catch(s){this.error=((t=(e=s.response)==null?void 0:e.data)==null?void 0:t.message)||"Failed to fetch student"}finally{this.loading=!1}},async createStudent(a){var e,t;this.loading=!0;try{const s=await r.post("/students",a);this.students.push(s.data)}catch(s){this.error=((t=(e=s.response)==null?void 0:e.data)==null?void 0:t.message)||"Failed to create student"}finally{this.loading=!1}},async updateStudent(a,e){var t,s;this.loading=!0;try{const n=await r.put(`/students/update/${a}`,e),i=this.students.findIndex(o=>o.id===a);i!==-1&&(this.students[i]=n.data)}catch(n){this.error=((s=(t=n.response)==null?void 0:t.data)==null?void 0:s.message)||"Failed to update student"}finally{this.loading=!1}},async deleteStudent(a){var e,t;this.loading=!0;try{await r.delete(`/students/${a}`),this.students=this.students.filter(s=>s.id!==a)}catch(s){this.error=((t=(e=s.response)==null?void 0:e.data)==null?void 0:t.message)||"Failed to delete student"}finally{this.loading=!1}},async fetchCenterWiseStudentCount(){var a,e;this.loading=!0;try{const t=await r.get("/students-count-center");this.centerWiseStudentCount=t.data}catch(t){this.error=((e=(a=t.response)==null?void 0:a.data)==null?void 0:e.message)||"Failed to fetch student counts"}finally{this.loading=!1}},async fetchCenterWiseInstituteCount(){var a,e;this.loading=!0;try{const t=await r.get("/center-wise-institute-count");return this.centerWiseInstituteCount=t.data,t.data}catch(t){this.error=((e=(a=t.response)==null?void 0:a.data)==null?void 0:e.message)||"Failed to fetch student counts"}finally{this.loading=!1}},async fetchPrintEnvelopData(a=null,e=null){var t,s;this.loading=!0,this.error=null;try{const n={};a&&(n.area_name=a),e&&(n.institute_code=e);const i=await r.get("/print-envelop",{params:n});this.printEnvelopData=i.data}catch(n){this.error=((s=(t=n.response)==null?void 0:t.data)==null?void 0:s.message)||"Failed to fetch print envelop data"}finally{this.loading=!1}},async fetchStudentsWithoutRollNumber({instituteCode:a,zamatId:e}={}){var s,n;this.loading=!0;const t={};a&&(t.institute_code=a),e&&(t.zamat_id=e);try{const i=await r.get("/without-roll-number",{params:t});this.students=i.data.students||[],this.institute=i.data.institute||null}catch(i){this.error=((n=(s=i.response)==null?void 0:s.data)==null?void 0:n.message)||"Failed to fetch students without roll number"}finally{this.loading=!1}},async fetchStudentsWithRollNumber({instituteCode:a,zamatId:e}={}){var s,n;this.loading=!0;const t={};a&&(t.institute_code=a),e&&(t.zamat_id=e);try{const i=await r.get("/with-roll-number",{params:t});this.students=i.data.students||[],this.institute=i.data.institute||null}catch(i){this.error=((n=(s=i.response)==null?void 0:s.data)==null?void 0:n.message)||"Failed to fetch students without roll number"}finally{this.loading=!1}},async fetchStudentsAdmitCard({instituteCode:a,zamatId:e}={}){var s,n;this.loading=!0;const t={};a&&(t.institute_code=a),e&&(t.zamat_id=e);try{const i=await r.get("/admit-card",{params:t});this.students=i.data||[]}catch(i){this.error=((n=(s=i.response)==null?void 0:s.data)==null?void 0:n.message)||"Failed to fetch students without roll number"}finally{this.loading=!1}},async updateMultipleStudents(a,e,t){var s,n;this.loading=!0,this.error=null;try{const i={institute_code:a,zamat_id:e,new_center_id:t},o=await r.post("/students/multiple-update",i);return o.data.updated_count>0&&await this.fetchStudents({instituteCode:a,zamatId:e}),o.data}catch(i){throw this.error=((n=(s=i.response)==null?void 0:s.data)==null?void 0:n.message)||"Failed to update multiple students",i}finally{this.loading=!1}}}});export{c as u};
