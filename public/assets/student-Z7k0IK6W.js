import{P as u,Q as r}from"./index-Degfsrwu.js";const c=u("student",{state:()=>({students:[],student:null,loading:!1,error:null,centerWiseStudentCount:[],printEnvelopData:[]}),actions:{async fetchStudents({applicationId:s,instituteCode:e,examId:t,registrationNumber:a,rollNumber:i}={}){var o,l;this.loading=!0;const n={};s&&(n.application_id=s),e&&(n.institute_code=e),t&&(n.exam_id=t),a&&(n.registration_number=a),i&&(n.roll_number=i);try{const d=await r.get("/students",{params:n});this.students=d.data}catch(d){this.error=((l=(o=d.response)==null?void 0:o.data)==null?void 0:l.message)||"Failed to fetch students"}finally{this.loading=!1}},async fetchPrintStudents({applicationId:s,instituteCode:e,zamatId:t}={}){var i,n;this.loading=!0;const a={};s&&(a.application_id=s),e&&(a.institute_code=e),t&&(a.zamat_id=t);try{const o=await r.get("/students-print",{params:a});this.students=o.data}catch(o){this.error=((n=(i=o.response)==null?void 0:i.data)==null?void 0:n.message)||"Failed to fetch students"}finally{this.loading=!1}},async fetchStudent(s){var e,t;this.loading=!0;try{const a=await r.get(`/students/${s}`);this.student=a.data}catch(a){this.error=((t=(e=a.response)==null?void 0:e.data)==null?void 0:t.message)||"Failed to fetch student"}finally{this.loading=!1}},async createStudent(s){var e,t;this.loading=!0;try{const a=await r.post("/students",s);this.students.push(a.data)}catch(a){this.error=((t=(e=a.response)==null?void 0:e.data)==null?void 0:t.message)||"Failed to create student"}finally{this.loading=!1}},async updateStudent(s,e){var t,a;this.loading=!0;try{const i=await r.put(`/students/update/${s}`,e),n=this.students.findIndex(o=>o.id===s);n!==-1&&(this.students[n]=i.data)}catch(i){this.error=((a=(t=i.response)==null?void 0:t.data)==null?void 0:a.message)||"Failed to update student"}finally{this.loading=!1}},async deleteStudent(s){var e,t;this.loading=!0;try{await r.delete(`/students/${s}`),this.students=this.students.filter(a=>a.id!==s)}catch(a){this.error=((t=(e=a.response)==null?void 0:e.data)==null?void 0:t.message)||"Failed to delete student"}finally{this.loading=!1}},async fetchCenterWiseStudentCount(){var s,e;this.loading=!0;try{const t=await r.get("/students-count-center");this.centerWiseStudentCount=t.data}catch(t){this.error=((e=(s=t.response)==null?void 0:s.data)==null?void 0:e.message)||"Failed to fetch student counts"}finally{this.loading=!1}},async fetchCenterWiseInstituteCount(){var s,e;this.loading=!0;try{const t=await r.get("/center-wise-institute-count");return this.centerWiseInstituteCount=t.data,t.data}catch(t){this.error=((e=(s=t.response)==null?void 0:s.data)==null?void 0:e.message)||"Failed to fetch student counts"}finally{this.loading=!1}},async fetchPrintEnvelopData(s=null,e=null){var t,a;this.loading=!0,this.error=null;try{const i={};s&&(i.area_name=s),e&&(i.institute_code=e);const n=await r.get("/print-envelop",{params:i});this.printEnvelopData=n.data}catch(i){this.error=((a=(t=i.response)==null?void 0:t.data)==null?void 0:a.message)||"Failed to fetch print envelop data"}finally{this.loading=!1}},async fetchStudentsWithoutRollNumber({instituteCode:s,zamatId:e}={}){var a,i;this.loading=!0;const t={};s&&(t.institute_code=s),e&&(t.zamat_id=e);try{const n=await r.get("/without-roll-number",{params:t});this.students=n.data.students||[],this.institute=n.data.institute||null}catch(n){this.error=((i=(a=n.response)==null?void 0:a.data)==null?void 0:i.message)||"Failed to fetch students without roll number"}finally{this.loading=!1}},async fetchStudentsWithRollNumber({instituteCode:s,zamatId:e}={}){var a,i;this.loading=!0;const t={};s&&(t.institute_code=s),e&&(t.zamat_id=e);try{const n=await r.get("/with-roll-number",{params:t});this.students=n.data.students||[],this.institute=n.data.institute||null}catch(n){this.error=((i=(a=n.response)==null?void 0:a.data)==null?void 0:i.message)||"Failed to fetch students without roll number"}finally{this.loading=!1}},async fetchStudentsAdmitCard({instituteCode:s,zamatId:e}={}){var a,i;this.loading=!0;const t={};s&&(t.institute_code=s),e&&(t.zamat_id=e);try{const n=await r.get("/admit-card",{params:t});this.students=n.data||[]}catch(n){this.error=((i=(a=n.response)==null?void 0:a.data)==null?void 0:i.message)||"Failed to fetch students without roll number"}finally{this.loading=!1}},async updateMultipleStudents(s,e,t){var a,i;this.loading=!0,this.error=null;try{const n={institute_code:s,zamat_id:e,new_center_id:t},o=await r.post("/students/multiple-update",n);return o.data.updated_count>0&&await this.fetchStudents({instituteCode:s,zamatId:e}),o.data}catch(n){throw this.error=((i=(a=n.response)==null?void 0:a.data)==null?void 0:i.message)||"Failed to update multiple students",n}finally{this.loading=!1}},async fetchStudentRollCount(){var s,e;this.loading=!0;try{const t=await r.get("/students-roll-count");this.StudentRollCount=t.data}catch(t){this.error=((e=(s=t.response)==null?void 0:s.data)==null?void 0:e.message)||"Failed to fetch student counts"}finally{this.loading=!1}},async fetchWithAndWithoutRollNumberCount(){var s,e;this.loading=!0;try{const t=await r.get("/students-with-without-roll-count");return this.withAndWithoutRollCount=t.data,t.data}catch(t){this.error=((e=(s=t.response)==null?void 0:s.data)==null?void 0:e.message)||"Failed to fetch student counts"}finally{this.loading=!1}},async fetchAreaWiseStudentCount(){var s,e;this.loading=!0;try{const t=await r.get("/area-wise-student-count");return this.areaWiseStudentCount=t.data,t.data}catch(t){this.error=((e=(s=t.response)==null?void 0:s.data)==null?void 0:e.message)||"Failed to fetch student counts"}finally{this.loading=!1}}}});export{c as u};
